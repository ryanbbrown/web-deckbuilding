---
description:
globs:
alwaysApply: false
---
When implementing a new feature, complete the following steps:

## 0. Planning
Based on the feature description from the user, read the relevant code files and create a specific + detailed to-do list. The to-do list should just contain the tasks listed below. Keep in mind that not all features will need all of the sections below; some may be front-end only or store + front-end only, for example. The user will usually specify at which level the feature starts.

After creating the to-do list, wait for the user to review and confirm before proceeding with the edits.

## 1. Service
- add or modify functions in `features/[feature_name]/services`
- add or modify any properties in `features/[feature_name]/types`
- add or modify tests in `features/[feature_name]/test/[feature_name]-test.ts`
- run `pnpm test --run [path/to/folder]` to ensure that all tests are passing; fix until they are

## 2. Store
- add or modify the function wrapper in `stores/[feature_name]-store.ts` to match changes made in the features folder
- add or modify tests in `stores/[feature_name]-store.test.ts`
- run `pnpm test --run [path/to/folder]` to ensure that all tests are passing; fix until they are

## 3. Front-End
- add or modify calls to the function + existing components and add any necessary new components to the front-end
- update `e2e/app.spec.ts` to test the new functionality; it should all be in the one same test run, before the “Reset Game” button is clicked (`await page.getByTestId('reset-game-btn').click();`)
    - note that changes made may have downstream affects. For example, if you draw an additional card, the number of cards in your hand will be different, so you need to update the number of cards check as well.
- run `pnpm test:e2e:ci` to ensure that the tests are passing; fix until they are

## 4. Final User Check
- uncomment lines 20 and 36 of `playwright.config.ts`, which allow for the e2e test to be run in slow motion so the user can properly view it
- STOP. Do NOT run the e2e test again. Wait for input from the user, who will run and watch the e2e test and confirm that it works as expected